on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_run:
    workflows: [ "Vendor Update" ]
    types:
      - completed

name: Create Release

jobs:
  release:
    name: GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install and Build
        run: |
          set -x

          python -m pip install -U pip setuptools wheel
          python -m pip install -U build twine

          # PyPI distro
          python -m build

          # TODO: Anaconda distro

          twine check dist/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

      - name: Get Version
        run: |
          python -m pip install -e .
          echo "PCAPKIT_VERSION=$(python -c 'import pcapkit; print(pcapkit.__version__)')" >> $GITHUB_ENV
          echo "PCAPKIT_PRERELEASE=$(python3 -c 'import pcapkit, pkg_resources; print(str(pkg_resources.parse_version(pcapkit.__version__).is_prerelease).lower())')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          allowUpdates: true
          artifacts: |
            dist/*
          generateReleaseNotes: true
          makeLatest: true
          name: PyPCAPKit v${{ env.PCAPKIT_VERSION }}
          prerelease: ${{ env.PCAPKIT_PRERELEASE }}
          tag: "v${{ env.PCAPKIT_VERSION }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
